@inject ILocalStorageService StorageService
@inject IToastService ToastService
@inject IAuthService AuthService


<div class="row">
    <div class="col navbar navbar-expand navbar-dark flex-column bg-dark flex-md-row bd-navbar" style="max-height:90px; min-height:90px;">
        <img src="img/legendarium-logo.png" class="m-3" style="position:fixed; top:5px; left:5px;" />
        <div class="h2 text-uppercase text-lg-center" style="letter-spacing:10px;color:aliceblue;font-family:Candara;margin-left:140px;margin-top:25px;">
            LEGENDARIUM
        </div>
        <div style="position:absolute;right:200px;color:white;">          
                <AuthorizeView>
                    <Authorized>
                        @context.User.Identity.Name | <a href="" @onclick="Logout">Logout</a>
                    </Authorized>
                    <NotAuthorized>
                        <button @onclick=DisplayLoginView>Log in</button> |
                        <button @onclick=DisplayRegisterView>Register</button>
                    </NotAuthorized>
                </AuthorizeView>            
        </div>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback<bool> ShowLogin { get; set; }
    [Parameter]
    public EventCallback<bool> ShowRegister { get; set; }


    private async Task DisplayLoginView()
    {
        await ShowLogin.InvokeAsync(true);
    }
    private async Task DisplayRegisterView()
    {
        await ShowRegister.InvokeAsync(true);
    }

    private async void Logout()
    {        
        var response = await AuthService.Logout();

        if(response.Success)
        {
            ToastService.ShowSuccess(response.Message);
        }
        else
        {
            ToastService.ShowError(response.Message);
        }
    }
}